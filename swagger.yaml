swagger: "2.0"
info:
  description: "This is a server for an Employee REST service API"
  version: "1.0.0"
  title: "Employee REST service"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "mukhtar.agboola@babbangona.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:3000"
basePath: "/"
tags:
- name: "Employee"
  description: "create, remove, update & delete employee details"

schemes:
- "http"

paths:
  /createUser:
    post:
      tags:
      - "createUser"
      summary: "Create new employee"
      description: "This uses the 'POST' request to create new employee details and store in database"
      operationId: "postEmployee"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "Employee details"
        description: "Employee object that needs to be added to database"
        required: true
        schema:
          $ref: "/createUser"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Employee not found"
        "405":
          description: "Validation exception"
      
  /getUserById/{Id}:
    get:
      tags:
      - "getUserById"
      summary: "Find employee by ID"
      description: "Returns a single employee json object"
      operationId: "getUserById"
      parameters:
      - name: "Id"
        in: "path"
        description: "ID of employee to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "/getUserById"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "User not found"
          
          
  /getUserByEmail/{email}:
    get:
      tags:
      - "getUserByEmail"
      summary: "Find employee by email"
      description: "Returns a single employee json object"
      operationId: "getUserByEmail"
      parameters:
      - name: "email"
        in: "path"
        description: "Email of employee to return"
        required: true
        type: "string"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "getUserByEmail"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "User not found"
          
    
  /login:
    post:
      tags:
      - "Login"
      summary: "Login an employee if there is an existing entry"
      description: ""
      operationId: "login"
      parameters:
      - name: ""
        in: "query"
        description: "login employee"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "Login employee"
        description: "Returns employee object"
        required: true
        schema:
          $ref: "/login"
      responses:
        "400":
          description: "Invalid user supplied"
        "404":
          description: "No record found"
          
  /update:
    patch:
      tags:
      - "update"
      summary: "Update already existing Employee data"
      description: ""
      operationId: "update"
      parameters:
      - name: "Employee"
        in: "query"
        description: "login employee"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "Login employee"
        description: "Returns employee object"
        required: true
        schema:
          $ref: "/login"
      responses:
        "400":
          description: "Invalid user supplied"
        "404":
          description: "Record to be updated not found"
          
          
  /deleteUser/{Id}:     
    delete:
      tags:
      - "deleteUser"
      summary: "Delete employee"
      description: "Delete an employee"
      operationId: "deleteEmployee"
      parameters:
      - name: "Id"
        in: "path"
        description: "The employee ID that needs to be deleted"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "400":
          description: "Invalid username supplied"
        "404":
          description: "Employee not found"
    
definitions:
  Employee:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      first_name:
        type: "string"
      last_name:
        type: "string"
      email:
        type: "string"
      
      is_deleted:
        type: "integer"
        format: "int32"
        
    xml:
      name: "Employee"